@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@section styles{
    <link href="~/Content/zTree.min.css" rel="stylesheet" />
    <style>
        .ztree li span {
            font-size: 14px;
        }
        .dataRow div {
            margin-bottom: 0px;
        }
    </style>
}
<!-- demo root element -->
<div id="app" class="box box-primary">
    <div class="box-header with-border">
        <ol class="breadcrumb" style="padding:0px;margin:1px;">
            <li><a href="/StorePurchaseOrder/Index"><i class="fa fa-dashboard"></i>采购单管理</a></li>
            <li class="active"><a href="/StorePurchaseOrder/Create">新增采购单</a></li>
        </ol>
    </div>
    <!-- /.box-header -->
    <!-- form start -->
    <form>
        <div class="box-body">
            <div class="row">
                <div class="form-group col-sm-4 col-xs-6">
                    <button type="button" class="btn btn-warning btn-flat" v-on:click="onSubmit">保 存</button>
                    <button type="button" class="btn btn-success btn-flat" v-on:click="showModal()">导入商品</button>                   
                    <a class="btn btn-default btn-flat" href="/StorePurchaseOrder/Index">取 消</a>
                    <input type="hidden" v-model="model.id" />
                </div>
            </div>
            <div class="row">
                <div class="col-sm-2 col-xs-3" v-show="selectStore.view">
                    <div class="input-group ">
                        <input type="hidden" class="form-control" v-model="model.storeId">
                        <input type="text" class="form-control" v-model="selectStore.name" placeholder="选择门店" readonly>
                        <span class="input-group-btn">
                            <button class="btn btn-flat btn-default" type="button" v-on:click="showStore"><i class="fa fa-search"></i></button>
                            @*<button class="btn btn-flat btn-default" type="button" v-on:click="clearStore"><i class="fa fa-eraser"></i></button>*@
                        </span>
                    </div>
                </div>              
            </div>
            <div class="row">
                <div class="col-xs-4 col-sm-4"></div>
                <div class="col-xs-4 col-sm-4"><h3 class="text-center text-success" style="border-bottom:2px solid;padding-bottom:1px;"><b>采购订单<span v-show="model.isGift">(赠品)</span></b></h3></div>
                <div class="col-xs-4 col-sm-4"></div>
            </div>
            <div class="row">
                <div class="col-xs-4 col-sm-4">
                    <span>单据号：</span>
                </div>
                <div class="col-xs-4 col-sm-4 text-center">
                </div>
                <div class="col-xs-4 col-sm-4">
                    <span class="text-danger">单据状态：@ViewBag.Status</span>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-4 col-sm-4">
                    <span>供应商：{{selectSupplier.name}}</span>
                </div>
                <div class="col-xs-4 col-sm-4 text-center">
                </div>
                <div class="col-xs-4 col-sm-4 ">
                    <span>供应商单号：</span>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-4 col-sm-4">
                    <span>收货部门：{{selectStore.name}}</span>
                </div>
                <div class="col-xs-4 col-sm-4 text-center">
                </div>
                <div class="col-xs-4 col-sm-4">
                    <span>制单日期：@DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")</span>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12 col-sm-12">
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th style="width:90px;"></th>
                                    <th style="width:50px;">序号</th>
                                    <th style="width:150px;">商品编码</th>
                                    <th>条码</th>
                                    <th style="width:200px;">品名</th>
                                    <th>规格</th>
                                    <th>单位</th>
                                    <th>合同进价</th>
                                    <th>进价</th>
                                    <th style="width:120px;">件规</th>
                                    <th>订货件数</th>
                                    <th style="width:100px;">订货数量</th>
                                    <th>实收件数</th>
                                    <th>实收数量</th>
                                    <th>金额</th>
                                    <th>生产日期</th>
                                    <th>保质期</th>
                                </tr>
                            </thead>
                            <tbody id="tbody">
                                <tr v-for="(index,item) in products">
                                    <td>
                                        <button type="button" class="btn btn-flat  btn-sm" title="添加行" v-on:click="addRow($event)"><span class="fa fa-plus"></span></button>
                                        <button type="button" class="btn btn-flat  btn-sm" v-show="index>0" title="删除行" v-on:click="removeRow(index)"><span class="fa fa-trash"></span></button>
                                    </td>
                                    <td class="text-center">{{index+1}}</td>
                                    <td>                                       
                                        <input type="text" class="form-control productCode" v-model="item.ProductCode" v-on:keyup.enter="inputProduct(item.ProductCode,index)" placeholder="录入编码或扫码" />                                        
                                    </td>
                                    <td>{{item.BarCode}}</td>
                                    <td>{{item.ProductName}}</td>
                                    <td>{{item.Specification}}</td>
                                    <td>{{item.Unit}}</td>
                                    <td>{{item.ContractPrice.toFixed(4)}}</td>
                                    <td v-bind:class="{'text-danger':item.ContractPrice>item.Price}">{{model.isGift?0:item.ContractPrice.toFixed(4)}}</td>
                                    <td >
                                        <select class="form-control" v-model="item.SpecificationQuantity">
                                            <option v-for="option in item.SpecificationQuantitys" v-bind:value="option">
                                                1 × {{ option }}
                                            </option>
                                        </select>
                                    </td>
                                    <td>{{item.PackageQuantity}}</td>
                                    <td>
                                        <input type="number" class="form-control quantity" v-model="item.Quantity" v-on:keyup.enter="inputNext($event)" />                                      
                                    </td>
                                    <td>{{item.ActualPackageQuantity}}</td>
                                    <td>
                                        {{item.ActualQuantity}}
                                    </td>
                                    <td>{{item.Amount.toFixed(2)}}</td>
                                    <td>{{item.ProductionDate}}</td>
                                    <td >
                                       {{item.ShelfLife}}
                                    </td>
                                </tr>
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td></td>
                                    <td style="width:50px;"></td>
                                    <td>合计：</td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td>{{totalQuantity}}</td>
                                    <td></td>
                                    <td></td>
                                    <td>{{countTotal.toFixed(2)}}</td>
                                    <td></td>
                                    <td class="dataRow"></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-3 col-sm-3">
                    <span>制单人： @ViewBag.CreatedByName</span>
                </div>
                <div class="col-xs-3 col-sm-3">
                    <span>供应商：</span>
                </div>
                <div class="col-xs-3 col-sm-3">
                    <span>收货人：</span>
                </div>
                <div class="col-xs-3 col-sm-3">
                    <span>入库人：</span>
                </div>
            </div>
        </div>
    </form>
    <!-- modal -->
    <v-modal title="导入商品" ok-text="确 定" cancel-text="取 消" v-bind:callback="importProduct" v-bind:show.sync="modal" v-bind:effect="fade" width="300">
        <div slot="modal-body" class="modal-body">
            <v-input type="textarea" help="请将excel中商品编号和数量两列粘贴到文本框中" v-bind:value.sync="inputProducts" placeholder="输入商品" required icon></v-input>
        </div>
    </v-modal>
    <v-modal title="选择门店" ok-text="确 定" cancel-text="取 消" v-bind:callback="getStore" v-bind:show.sync="selectStore.modal" v-bind:effect="fade" width="60%">
        <div slot="modal-body" class="modal-body">
            <div style="min-height:350px;max-height:500px;overflow:auto;"><ul id="ztree" class="ztree"></ul></div>
        </div>
    </v-modal>
</div>
@{Html.RenderPartial("VueTableTemplate");}
@section scripts{
    <script src="~/Content/Vue/vuetable/vuetable.js"></script>
<script src="~/Scripts/jquery.ztree.all-3.5.min.js"></script>
    <script>
        $("doucument").ready(function () {
            var demo = new Vue({
                components: {
                    'v-modal': VueStrap.modal,
                    'v-input': VueStrap.input,
                    'v-form': VueStrap.formGroup,
                    'v-checkbox': VueStrap.checkbox
                },
                el: '#app',
                data: {
                    valid: false,
                    modal: false,
                    model: {
                        id: 0,
                        code: '',
                        storeId: @ViewBag.StoreId,
                        supplierId: 0,
                        isGift:@ViewBag.IsGift,
                        items: '',
                        orderType:1,
                    },
                    products: [{
                        ProductId: 0, ProductCode: '', BarCode: '', ProductName: '', Specification: '', Unit: '', ContractPrice: 0, Price: 0,
                        PackageQuantity: 0,SpecificationQuantity:1, SpecificationQuantitys: [1], Quantity: 1, ActualPackageQuantity: 0, ActualQuantity: 0, Amount: 0,
                        ProductionDate: '', ShelfLife: 0
                    }],
                    totalQuantity: 0,
                    inputProducts: '',
                    selectSupplier: {
                        modal: false,
                        name: ''
                    },
                    selectStore: {
                        modal: false,
                        name: '@ViewBag.StoreName',
                        view:@ViewBag.View,                    
                    }
                },
                methods: {
                    onSubmit: function () {
                        //获取选择节点
                        var _self = this;
                        var data = "";
                        for (var i = 0; i < _self.products.length; i++) {
                            var item = _self.products[i];
                            if (item.ProductId > 0 && item.Quantity > 0) {
                                var price = _self.model.isGift?0:item.ContractPrice;
                                data += "{\"ProductId\":" + item.ProductId + ",\"ContractPrice\":" + item.ContractPrice 
                                     + ",\"Price\":" + price + ",\"Quantity\":" + item.Quantity + ",\"SpecificationQuantity\":" + item.SpecificationQuantity +"},";
                            }
                        }
                        if (data == "") {
                            bootbox.alert("请导入商品");
                            return;
                        }
                        data = data.substring(0, data.length - 1);
                        data = "[" + data + "]";
                        _self.model.items = data;
                        var v_data = _self.model;
                        $.post("/StorePurchaseOrder/Create", v_data, function (result) {
                            if (result.success) {
                                bootbox.alert("保存成功！", function () {
                                    window.location.href = "/StorePurchaseOrder/Index";
                                });
                            }
                            else {
                                bootbox.alert(result.error);
                            }
                        }, "json");
                    },
                    importProduct: function () {
                        var inputItems = this.inputProducts;
                        var _self = this;
                        if (inputItems == "") { return; }                      
                        if (_self.model.storeId == 0) { bootbox.alert("请选择门店"); return; }
                        var data = {
                            inputProducts: inputItems,
                            storeId: _self.model.storeId
                        }
                        $.post("/StorePurchaseOrder/ImportProduct", data, function (result) {
                            if (result.success) {
                                _self.products = [];
                                for(var i=0;i<result.data.length;i++)
                                {
                                    var item = result.data[i];
                                    if(_self.model.supplierId==0){
                                        _self.model.supplierId = item.SupplierId;
                                        _self.selectSupplier.name = item.SupplierName;                                   
                                    }
                                    else{
                                        //同一个单子，供应商应该一致
                                        if(_self.model.supplierId!=item.SupplierId)
                                        {
                                            bootbox.alert("录入的商品供应商不一致");break;
                                        }
                                    }
                                    _self.products.push(item);
                                }
                               
                                _self.modal = false;
                                //设置焦点,延迟500，等待vue.js 渲染完毕                              
                                setTimeout(function () {
                                    var selector = "tr:eq(0)";
                                    var row = $("#tbody").find(selector);
                                    row.find("input.quantity").focus().select();
                                }, 300);
                            }
                            else {
                                bootbox.alert(result.error);
                            }
                        }, "json");
                    },
                    showModal: function () {
                        this.modal = true;
                    },
                    addRow: function (event) {
                        this.products.push({
                            ProductId: 0, ProductCode: '', BarCode: '', ProductName: '', Specification: '', Unit: '', ContractPrice: 0, Price: 0,
                            PackageQuantity: 0,SpecificationQuantity:1, SpecificationQuantitys: [1], Quantity: 1, ActualPackageQuantity: 0, ActualQuantity: 0, Amount: 0,
                            ProductionDate: '', ShelfLife: 0
                        });
                        //设置焦点
                        var target = event.srcElement || event.target;
                        var row = target.localName == "span" ? $(target).parent().parent().parent() : $(target).parent().parent();
                        setfocus();                        
                        function setfocus()
                        {
                            setTimeout(function () {
                                var nextRow = row.next();
                                if (nextRow) { // 等待 vue.js 渲染完成后，才设置
                                    nextRow.find("input.productCode").focus().select();
                                }
                                else {
                                    setfocus();
                                }
                            }, 200);
                        }
                    },
                    removeRow: function (index) {
                        this.products.splice(index, 1);
                    },
                    inputProduct: function (codeOrBarCode, index) {
                        var _self = this;
                        if (codeOrBarCode == "") { return; }
                        if (_self.model.storeId == 0) { bootbox.alert("请选择门店"); return; }
                        var data = {
                            productCodeOrBarCode: codeOrBarCode,
                            storeId: _self.model.storeId
                        }
                        //设置焦点
                        $.get("/StorePurchaseOrder/GetPurchaseOrderItem", data, function (result) {
                            if (result.success) {                                 
                                if(_self.model.supplierId==0){
                                    _self.model.supplierId = result.data.SupplierId;
                                    _self.selectSupplier.name = result.data.SupplierName;                                   
                                }
                                else{
                                    //同一个单子，供应商应该一致
                                    if(_self.model.supplierId!=result.data.SupplierId)
                                    {
                                        bootbox.alert("录入的商品供应商不一致");return;
                                    }
                                }
                                _self.products.$set(index, result.data); 
                               
                                //设置焦点,延迟500，等待vue.js 渲染完毕                              
                                setTimeout(function () {                                 
                                    var selector = "tr:eq(" + index + ")";
                                    var row= $("#tbody").find(selector);
                                    row.find("input.quantity").focus().select();
                                }, 300);
                            }
                            else {
                                bootbox.alert(result.error);
                            }
                        }, "json");

                    },
                    inputNext: function (event) {
                        var target = event.target;
                        var row = $(target).parent().parent();
                        if (row.next().length > 0) {
                            row.next().find("input.quantity").focus().select();
                        }
                        else {
                            this.addRow(event);
                        }
                    },                    
                    showStore: function () {
                        this.selectStore.modal = true;
                    },
                    clearStore: function () {
                        this.model.storeId = 0;
                        this.selectStore.name = "";
                    },
                    getStore: function () {
                        var treeObj = $.fn.zTree.getZTreeObj("ztree"); 
                        var selecteds= treeObj.getCheckedNodes(true);
                        if (selecteds) {
                            var idArray = new Array();
                            var nameArray = new Array();
                            selecteds.forEach(function(item){
                                if(item.level==1){
                                    idArray.push(item.id);
                                    nameArray.push(item.name);
                                }
                            })
                            if(idArray.length>0){
                                this.model.storeId = idArray[0];
                                this.selectStore.name = nameArray[0];
                                this.selectStore.modal = false;
                                this.clearItems();
                            }
                            else
                            {
                                bootbox.alert("请选择一个门店");
                            }
                           
                        }
                    },
                    print: function () {

                    },
                    clearItems:function(){
                        if(this.products.length>0)
                        {
                            this.products = [{
                                ProductId: 0, ProductCode: '', BarCode: '', ProductName: '', Specification: '', Unit: '', ContractPrice: 0, Price: 0,
                                PackageQuantity: 0,SpecificationQuantity: 1, SpecificationQuantitys: [1], Quantity: 1, ActualPackageQuantity: 0, ActualQuantity: 0, Amount: 0,
                                ProductionDate: '', ShelfLife: 0
                            }];
                        }
                    }
                },
                computed: {
                    countTotal: function () {
                        var total = 0;
                        var bookQty = 0;
                        var _self = this;
                        this.products.forEach(function (item) {
                            if(item.Quantity==undefined||item.Quantity==""||item.Quantity==null){
                                item.Quantity =0;
                            }
                            var qty = parseInt(item.Quantity);
                            var price = _self.model.isGift?0:item.ContractPrice;
                            item.Amount = price * qty;
                            item.Amount =parseFloat(item.Amount.toFixed(2));
                            bookQty += qty;
                            total += item.Amount;
                            item.PackageQuantity =item.SpecificationQuantity==1?0: parseInt(qty / item.SpecificationQuantity);
                        })
                        _self.totalQuantity = bookQty;
                        return total;
                    }
                }
            });

            //加载门店tree
            var zTreeObj;           
            var setting = {
                check: {
                    enable:true
                },               
                async: {
                    enable: true,
                    url: "/Store/LoadStore",
                    //autoParam: ["id", "name"]
                },
                callback:{
                    onClick:function(event, treeId, treeNode){
                        //点击展开/折叠节点
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var open = !treeNode.open;
                        treeObj.expandNode(treeNode, open, false, false);
                        // vue.searchArgs.categoryId =treeNode.id;                      
                    }
                }
            };           
            zTreeObj = $.fn.zTree.init($("#ztree"), setting);

        });

       
    </script>
}



