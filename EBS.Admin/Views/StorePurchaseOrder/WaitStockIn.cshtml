@using EBS.Domain.ValueObject;
@using EBS.Infrastructure.Extension
@model EBS.Query.DTO.StorePurchaseOrderDto
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
    .dataRow div {
        margin-bottom: 0px;
    }
</style>
<!-- demo root element -->
<div id="app" class="box box-primary">
    <div class="box-header with-border">
        <ol class="breadcrumb" style="padding:0px;margin:1px;">
            <li><a href="/StorePurchaseOrder/Index"><i class="fa fa-dashboard"></i>采购单管理</a></li>
            <li class="active"><a href="/StorePurchaseOrder/WaitStockIn/{{model.id}}">收货入库</a></li>
        </ol>
    </div>
    <!-- /.box-header -->
    <!-- form start -->
    <form>
        <div class="box-body">
            <div class="row">
                <div class="form-group col-sm-4 col-xs-6">
                    <button type="button" class="btn btn-warning btn-flat" v-on:click="onSubmit">收 货</button>
                    <button type="button" class="btn btn-success btn-flat" v-on:click="saveInventory">入 库</button>
                    <a class="btn btn-default btn-flat" href="/StorePurchaseOrder/Index">取 消</a>
                    <input type="hidden" v-model="model.id" />
                    <input type="hidden" class="form-control" v-model="model.supplierId">
                    <input type="hidden" class="form-control" v-model="model.storeId">
                </div>
            </div>
            <div class="row">
                <div class="col-sm-2 col-xs-3"> 
                              
                    <div class="input-group"> 
                        <input type="text" class="form-control productCode" v-model="inputProductCodeOrBarCode" v-on:keyup.enter="inputProduct()" placeholder="输入商品编码或扫条码" />       
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-warning btn-flat" v-on:click="toggleScan">扫码({{toggleScanText}})</button>
                        </span> 
                    </div>
                </div>
                <div class="col-sm-2 col-xs-3">
                    <v-input type="text" v-bind:value.sync="model.supplierBill" placeholder="录入供应商单号" maxlength="20" required icon></v-input>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-4 col-sm-4"></div>
                <div class="col-xs-4 col-sm-4"><h3 class="text-center text-success" style="border-bottom:2px solid;padding-bottom:1px;"><b>采购订单<span v-show="model.isGift">(赠品)</span></b></h3></div>
                <div class="col-xs-4 col-sm-4"></div>
            </div>
            <div class="row">
                <div class="col-xs-4 col-sm-4">
                    <span>单据号：{{model.code}}</span>
                </div>
                <div class="col-xs-4 col-sm-4 text-center">
                </div>
                <div class="col-xs-4 col-sm-4">
                    <span class="text-danger">单据状态：{{model.status}}</span>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-4 col-sm-4">
                    <span>供应商：{{model.supplierName}}</span>
                </div>
                <div class="col-xs-4 col-sm-4 text-center">
                </div>
                <div class="col-xs-4 col-sm-4 ">
                    <span>供应商单号：{{model.supplierBill}}</span>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-4 col-sm-4">
                    <span>收货部门：{{model.storeName}}</span>
                </div>
                <div class="col-xs-4 col-sm-4 text-center">
                </div>
                <div class="col-xs-4 col-sm-4">
                    <span>制单日期：{{model.createdOn}}</span>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12 col-sm-12">
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                                <tr>                                   
                                    <th style="width:50px;">序号</th>
                                    <th style="width:150px;">商品编码</th>
                                    <th>条码</th>
                                    <th style="width:150px;">品名</th>
                                    <th>规格</th>
                                    <th>单位</th>
                                    <th>合同进价</th>
                                    <th>进价</th>
                                    <th>件规</th>
                                    <th>订货件数</th>
                                    <th>订货数量</th>
                                    <th>实收件数</th>
                                    <th>实收数量</th>
                                    <th>金额</th>
                                    <th>生产日期</th>
                                    <th>保质期</th>
                                </tr>
                            </thead>
                            <tbody id="tbody">
                                <tr v-for="(index,item) in products" class="{{item.BgColor}}" >
                                    <td class="text-center">{{index+1}}</td>
                                    <td>
                                        {{item.ProductCode}}
                                        @*<input type="text" class="form-control productCode" v-model="item.ProductCode" v-on:keyup.enter="inputProduct(item.ProductCode,index)" placeholder="录入编码或扫码" />*@
                                    </td>
                                    <td>{{item.BarCode}}</td>
                                    <td>{{item.ProductName}}</td>
                                    <td>{{item.Specification}}</td>
                                    <td>{{item.Unit}}</td>
                                    <td>{{item.ContractPrice.toFixed(2)}}</td>
                                    <td>{{model.isGift?0:item.Price.toFixed(2)}}</td>
                                    <td>
                                        1 × {{item.SpecificationQuantity}}
                                    </td>
                                    <td>{{item.PackageQuantity}}</td>
                                    <td>
                                        {{item.Quantity}}

                                    </td>
                                    <td>{{item.ActualPackageQuantity}}</td>
                                    <td>
                                        <input type="number"  class="form-control quantity" v-model="item.ActualQuantity" v-on:keyup.enter="inputNext($event)" />
                                    </td>
                                    <td>{{item.Amount.toFixed(2)}}</td>
                                    <td>
                                        <input type="text" class="form-control datepicker" v-model="item.ProductionDate" readonly>
                                    </td>
                                    <td>
                                        <input type="number" class="form-control shelfLife" title="保质期，单位：天" v-model="item.ShelfLife" v-on:keyup.enter="inputShelfLife($event)" />
                                    </td>
                                </tr>
                            </tbody>
                            <tfoot>
                                <tr>                                  
                                    <td style="width:50px;"></td>
                                    <td>合计：</td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td>{{totalQuantity}}</td>
                                    <td></td>
                                    <td>{{totalActualQuantity}}</td>
                                    <td>{{countTotal.toFixed(2)}}</td>
                                    <td></td>
                                    <td class="dataRow"></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-3 col-sm-3">
                    <span>制单人：{{model.createdByName}}</span>
                </div>
                <div class="col-xs-3 col-sm-3">
                    <span>供应商： </span>
                </div>
                <div class="col-xs-3 col-sm-3">
                    <span>收货人：{{model.receivedByName}}</span>
                </div>
                <div class="col-xs-3 col-sm-3">
                    <span>入库人：{{model.storagedByName}}</span>
                </div>
            </div>
        </div>       
    </form>
    <br />       
</div>
@{Html.RenderPartial("VueTableTemplate");}
@section scripts{
    <script src="~/Content/Vue/vuetable/vuetable.js"></script>
    <script>
        $("doucument").ready(function () {
            var demo = new Vue({
                components: {
                    'v-input': VueStrap.input  
                },
                el: '#app',
                data: {
                    inputProductCodeOrBarCode:'',
                    model: {
                        id: @Model.Id,
                        code: '@Model.Code',
                        storeId: @Model.StoreId,
                        storeName:'@Model.StoreName',
                        supplierId: @Model.SupplierId,
                        supplierName:'@Model.SupplierName',
                        supplierBill:'@Model.SupplierBill',
                        isGift:@Model.IsGift.ToString().ToLower(),
                        status:'@Model.PurchaseOrderStatus',
                        createdOn:'@Model.CreatedOn',
                        createdByName:'@Model.CreatedByName',
                        receivedByName:'@Model.ReceivedByName',
                        storagedByName:'@Model.StoragedByName',
                        items: ''
                    },
                    products: @Html.Raw(ViewBag.StorePurchaseOrderItems),
                    totalQuantity: 0,
                    totalActualQuantity:0,
                    toggleScanText:'关'
                },
                methods: {
                    onSubmit: function () {
                        //获取选择节点
                        var _self = this;
                        var data = "";
                        for (var i = 0; i < _self.products.length; i++) {
                            var item = _self.products[i];
                            if(item.Quantity < 0||item.ActualQuantity>item.Quantity)
                            {
                                bootbox.alert("商品["+item.ProductName+"]实收数不正确");
                                return;
                            }
                            if (item.ProductId > 0 && item.Quantity > 0) {
                                var price = _self.model.isGift?0:item.Price;
                                if(item.ProductionDate==null){
                                    item.ProductionDate="";
                                }
                                data += "{\"Id\":" + item.Id + ",\"ActualQuantity\":" + item.ActualQuantity + ",\"ProductionDate\":\"" + item.ProductionDate + "\",\"ShelfLife\":" + item.ShelfLife + "},";
                            }
                        }
                        if (data == "") {
                            bootbox.alert("请导入商品");
                            return;
                        }
                        data = data.substring(0, data.length - 1);
                        data = "[" + data + "]";
                        if( _self.model.supplierBill==""){
                            bootbox.alert("请录入供应商单据号");
                            return;
                        }
                        _self.model.items = data;
                        var v_data = _self.model;
                        $.post("/StorePurchaseOrder/ReceiveGoods", v_data, function (result) {
                            if (result.success) {
                                bootbox.alert("保存成功！");
                                _self.model.status ="待入库";
                            }
                            else {
                                bootbox.alert(result.error);
                            }
                        }, "json");
                    }, 
                    saveInventory:function(){
                        var _self = this; 
                        bootbox.confirm("您确定提交该记录？", function (result) {
                            if (result) {
                                $.post("/StorePurchaseOrder/SaveInventory", {id:_self.model.id}, function (result) {
                                    if (result.success) {
                                        bootbox.alert("保存成功！", function () {
                                            window.location.href = "/StorePurchaseOrder/Index";
                                        });
                                    }
                                    else {
                                        bootbox.alert(result.error);
                                    }
                                }, "json");
                            }
                        });                       
                    },
                    inputNext: function (event) {
                        var target = event.target;
                        var row = $(target).parent().parent();
                        if (row.next().length > 0) {
                            row.next().find("input.quantity").focus().select();
                        }                       
                    },
                    inputShelfLife:function(){
                        var target = event.target;
                        var row = $(target).parent().parent();
                        if (row.next().length > 0) {
                            row.next().find("input.shelfLife").focus().select();
                        }                        
                    } ,
                    // 扫码
                    inputProduct:function(){
                        var _self = this;
                        this.products.forEach(function (item) {
                            if(item.ProductCode==_self.inputProductCodeOrBarCode||item.BarCode==_self.inputProductCodeOrBarCode)
                            {
                                item.ActualQuantity= item.ActualQuantity<item.Quantity ? item.ActualQuantity + 1 :item.Quantity ;
                                _self.inputProductCodeOrBarCode = "";
                               // item.BgColor = item.ActualQuantity==item.Quantity ?"bg-success":"bg-danger";                            
                                return;
                            }
                        })
                    },
                    toggleScan:function(){
                        var _self = this;
                        _self.toggleScanText = _self.toggleScanText=="关"?"开":"关" ;
                        _self.products.forEach(function (item) {                         
                            item.ActualQuantity = _self.toggleScanText=="关"? item.Quantity : 0 ;
                           // item.BgColor = item.ActualQuantity==item.Quantity ?"bg-success":"bg-danger";     
                        })
                    }
                },
                computed: {
                    countTotal: function () {
                        var total = 0;
                        var bookQty = 0;
                        var totalActualQty = 0;
                        var _self = this;
                        this.products.forEach(function (item) {
                            var qty = parseInt(item.ActualQuantity);
                            var actualQty = parseInt(item.ActualQuantity);
                            var price = _self.model.isGift?0:item.Price;
                            item.Amount = price * qty;
                            bookQty += qty;
                            total += item.Amount;
                            totalActualQty+= actualQty;
                            //item.PackageQuantity =item.SpecificationQuantitys[0]==1?0: parseInt(qty / item.SpecificationQuantitys[0]);
                            item.ActualPackageQuantity =item.SpecificationQuantity==1?0: parseInt(qty / item.SpecificationQuantity);
                            //设置颜色
                            item.BgColor = item.ActualQuantity==item.Quantity ?"bg-success":"bg-danger";                                                 
                        })
                        _self.totalQuantity = bookQty;
                        _self.totalActualQuantity = totalActualQty;
                        return total;
                    }
                },
                watch:{
                    
                }

            });

            $(".datepicker").datepicker({
                language: "zh-CN",
                autoclose: true,//选中之后自动隐藏日期选择框
                clearBtn: true,//清除按钮
                //todayBtn: true,//今日按钮
                format: "yyyy-mm-dd"//日期格式
            });

            $(".productCode").focus();
        });
    </script>
}



