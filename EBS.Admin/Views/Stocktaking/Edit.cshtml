@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section styles{
    <link href="~/Content/zTree.min.css" rel="stylesheet" />
    <style>
        .ztree li span {
            font-size: 14px;
        }

        .dataRow div {
            margin-bottom: 0px;
        }
    </style>
}
<!-- demo root element -->
<div id="app" class="box box-primary">
    <div class="box-header with-border">
        <ol class="breadcrumb" style="padding:0px;margin:1px;">
            <li><a href="/Stocktaking/AuditIndex"><i class="fa fa-dashboard"></i>盘点修正单审核</a></li>
            <li class="active"><a href="/Stocktaking/Edit/{{model.id}}">审核盘点修正单</a></li>
        </ol>
    </div>
    <!-- /.box-header -->
    <!-- form start -->
    <form>
        <div class="box-body ">
            <div class="row">
                <div class="form-group col-sm-4 col-xs-6">
                    <button type="button" class="btn btn-warning btn-flat" v-on:click="onSubmit">保 存</button>
                    <button type="button" class="btn btn-default btn-flat" v-on:click="print">打印</button>
                    <a class="btn btn-default btn-flat" href="/Stocktaking/Index">取 消</a>
                    <input type="hidden" v-model="model.id" />
                </div>
            </div>
            <div class="row">
                <div class="col-sm-2 col-xs-3" v-show="selectStore.view">
                    <div class="input-group ">
                        <input type="hidden" class="form-control" v-model="searchArgs.storeId">
                        <input type="text" class="form-control" v-model="selectStore.name" placeholder="选择门店" readonly>
                        <span class="input-group-btn">
                            <button class="btn btn-flat btn-default" type="button" v-on:click="showStore"><i class="fa fa-search"></i></button>
                            <button class="btn btn-flat btn-default" type="button" v-on:click="clearStore"><i class="fa fa-eraser"></i></button>
                        </span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-4 col-sm-4"></div>
                <div class="col-xs-4 col-sm-4"><h3 class="text-center text-success" style="border-bottom:2px solid;padding-bottom:1px;"><b>盘点修正单</b></h3></div>
                <div class="col-xs-4 col-sm-4"></div>
            </div>
            <div class="row">
                <div class="col-xs-4 col-sm-4">
                    <span>门店：{{selectStore.name}}</span>
                </div>
                <div class="col-xs-4 col-sm-4 text-center">
                </div>
                <div class="col-xs-4 col-sm-4 ">
                    <span v-bind:class="checkStartDate">单据号：</span>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-4 col-sm-4">
                    <span>货架码：{{model.shelfCode}}</span>
                </div>
                <div class="col-xs-4 col-sm-4 text-center">
                </div>
                <div class="col-xs-4 col-sm-4">
                    <span>制单日期：@DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")</span>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12">
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th style="width:90px;"></th>
                                    <th style="width:50px;">序号</th>
                                    <th style="width:150px;">商品编码</th>
                                    <th>条码</th>
                                    <th>品名</th>
                                    <th>规格</th>
                                    <th>单位</th>
                                    <th>售价</th>
                                    <th>库存</th>
                                    <th>盘点数</th>
                                    <th style="width:200px;">调整数</th>
                                    <th>差数</th>
                                    <th>差价</th>
                                    <th>差错原因</th>
                                </tr>
                            </thead>
                            <tbody id="tbody">
                                <tr v-for="(index,item) in products">
                                    <td>
                                        <button type="button" class="btn btn-flat  btn-sm" title="添加行" v-on:click="addRow($event)"><span class="fa fa-plus"></span></button>
                                        <button type="button" class="btn btn-flat  btn-sm" v-show="index>0" title="删除行" v-on:click="removeRow(index)"><span class="fa fa-trash"></span></button>
                                    </td>
                                    <td class="text-center">{{index+1}}</td>
                                    <td>
                                        <input type="text" class="form-control productCode" v-model="item.ProductCode" v-on:keyup.enter="inputProduct(item.ProductCode,index)" placeholder="录入编码或扫码" />
                                    </td>
                                    <td>{{item.BarCode}}</td>
                                    <td>{{item.ProductName}}</td>
                                    <td>{{item.Specification}}</td>
                                    <td>{{item.Unit}}</td>
                                    <td>{{item.SalePrice}}</td>
                                    <th>{{item.Quantity}}</th>
                                    <th>{{item.CountQuantity}}</th>
                                    <td>
                                        <input type="text" class="form-control quantity" v-model="item.countQuantity" v-on:keyup.enter="inputNext" />
                                    </td>
                                    <td>{{item.Quantity-item.CountQuantity}}</td>
                                    <td>{{item.SalePrice*(item.Quantity-item.CountQuantity)}}</td>
                                    <td><input type="text" class="form-control reason" v-model="item.corectReason" /></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-3 col-sm-3">
                    <span>制单人： @ViewBag.CreatedByName</span>
                </div>
            </div>
        </div>
    </form>
    <v-modal title="选择门店" ok-text="确 定" cancel-text="取 消" v-bind:callback="getStore" v-bind:show.sync="selectStore.modal" v-bind:effect="fade" width="60%">
        <div slot="modal-body" class="modal-body">
            <div style="min-height:350px;max-height:500px;overflow:auto;"><ul id="ztree" class="ztree"></ul></div>
        </div>
    </v-modal>
</div>
@{Html.RenderPartial("VueTableTemplate");}
@section scripts{
    <script src="~/Content/Vue/vuetable/vuetable.js"></script>
    <script src="~/Scripts/jquery.ztree.all-3.5.min.js"></script>
    <script>
        $("doucument").ready(function () {
            var demo = new Vue({
                components: {
                    'v-modal': VueStrap.modal,
                    'v-input': VueStrap.input
                },
                el: '#app',
                data: {
                    valid: false,
                    modal: false,
                    model: {
                        id: 0,
                        code: '',
                        storeId: @ViewBag.StoreId,
                        shelfCode: '',
                        items: '',
                        stocktakingPlanId:0,
                    },
                    products: [{ ProductId: 0, ProductCode: '', BarCode: '', ProductName: '', Specification: '', Unit: '', SalePrice: 0,Quantity:0, CountQuantity: 0,CorectReason:'' }],
                    totalQuantity: 0,
                    inputProducts: '',
                    selectStore: {
                        modal: false,
                        name: '@ViewBag.StoreName',
                        view:@ViewBag.View,
                    }
                },
                methods: {
                    onSubmit: function () {
                        //获取选择节点
                        var _self = this;
                        if (_self.storeId==0) { bootbox.alert("请选择门店"); return; }
                        var data = "";
                        for (var i = 0; i < _self.products.length; i++) {
                            var item = _self.products[i];
                            if (item.ProductId > 0 && item.ContractPrice > 0) {
                                data += "{\"ProductId\":" + item.ProductId + ",\"CountQuantity\":" + item.CountQuantity
                                     + ",\"ContractPrice\":" + item.ContractPrice + "},";
                            }
                        }
                        if (data == "") {
                            bootbox.alert("请导入商品");
                            return;
                        }
                        data = data.substring(0, data.length - 1);
                        data = "[" + data + "]";
                        _self.model.items = data;
                        var v_data = _self.model;
                        $.post("/Stocktaking/Correct", v_data, function (result) {
                            if (result.success) {
                                bootbox.alert("保存成功！", function () {
                                    window.location.href = "/Stocktaking/Correct";
                                });
                            }
                            else {
                                bootbox.alert(result.error);
                            }
                        }, "json");
                    },
                    addRow: function (event) {
                        this.products.push({ ProductId: 0, ProductCode: '', BarCode: '', ProductName: '', Specification: '', Unit: '', SalePrice: 0,Quantity:0, CountQuantity: 0,CorectReason:'' });
                        //设置焦点
                        var target = event.srcElement || event.target;
                        var row = target.localName == "button" ? $(target).parent().parent() : $(target).parent().parent().parent();
                        setfocus();
                        function setfocus() {
                            setTimeout(function () {
                                var nextRow = row.next();
                                if (nextRow) { // 等待 vue.js 渲染完成后，才设置
                                    nextRow.find("input.productCode").focus().select();
                                }
                                else {
                                    setfocus();
                                }
                            }, 200);
                        }
                    },
                    removeRow: function (index) {
                        this.products.splice(index, 1);
                    },
                    inputProduct: function (codeOrBarCode, index) {
                        var _self = this;
                        if (codeOrBarCode == "") { return; }
                        if (_self.model.storeId == 0) { bootbox.alert("请选择门店"); return; }
                        var data = {
                            productCodeOrBarCode: codeOrBarCode,
                            planId:_self.model.stocktakingPlanId
                        }
                        //设置焦点
                        $.get("/Stocktaking/QueryStocktakingItem", data, function (result) {
                            if (result.success) {
                                _self.products.$set(index, result.data);
                                if(_self.model.stocktakingPlanId==0)
                                {
                                    _self.model.stocktakingPlanId = result.data.Id;
                                }
                                //设置焦点,延迟500，等待vue.js 渲染完毕
                                setTimeout(function () {
                                    var selector = "tr:eq(" + index + ")";
                                    var row = $("#tbody").find(selector);
                                    row.find("input.quantity").focus().select();
                                }, 300);
                            }
                            else {
                                bootbox.alert(result.error);
                            }
                        }, "json");

                    },
                    inputNext: function (event) {
                        var target = event.target;
                        var row = $(target).parent().parent().parent();
                        if (row.next().length > 0) {
                            row.next().find("input.quantity").focus().select();
                        }
                        else {
                            this.addRow(event);
                        }
                    },
                    showStore: function () {
                        this.selectStore.modal = true;
                    },
                    clearStore: function () {
                        this.model.storeId = 0;
                        this.selectStore.name = "";
                    },
                    getStore: function () {
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var selecteds= treeObj.getCheckedNodes(true);
                        if (selecteds) {
                            var idArray = new Array();
                            var nameArray = new Array();
                            selecteds.forEach(function(item){
                                if(item.level==1){
                                    idArray.push(item.id);
                                    nameArray.push(item.name);
                                }
                            })
                            if(idArray.length>0){
                                this.model.storeId = idArray[0];
                                this.selectStore.name = nameArray[0];
                                this.selectStore.modal = false;
                            }
                            else
                            {
                                bootbox.alert("请选择一个门店");
                            }

                        }
                    },
                    print: function () {

                    },
                    clearItems: function () {
                        if (this.products.length > 0) {
                            this.products = [{ ProductId: 0, ProductCode: '', BarCode: '', ProductName: '', Specification: '', Unit: '', SalePrice: 0,Quantity:0, CountQuantity: 0,CorectReason:'' }];
                        }
                    }
                }
            });

            //加载门店tree
            var zTreeObj;
            var setting = {
                check: {
                    enable:true
                },
                async: {
                    enable: true,
                    url: "/Store/LoadStore",
                    //autoParam: ["id", "name"]
                },
                callback:{
                    onClick:function(event, treeId, treeNode){
                        //点击展开/折叠节点
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var open = !treeNode.open;
                        treeObj.expandNode(treeNode, open, false, false);
                        // vue.searchArgs.categoryId =treeNode.id;
                    }
                }
            };
            zTreeObj = $.fn.zTree.init($("#ztree"), setting);

        });

    </script>
}














