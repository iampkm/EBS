@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
    .dataRow div {
        margin-bottom: 0px;
    }
</style>
<!-- demo root element -->
<div id="app" class="box box-primary">
    <div class="box-header with-border">
        <ol class="breadcrumb" style="padding:0px;margin:1px;">
            <li><a href="/Stocktaking/Index"><i class="fa fa-dashboard"></i>盘点单</a></li>
            <li class="active"><a href="/Stocktaking/Create">新增盘点单</a></li>
        </ol>
    </div>
    <!-- /.box-header -->
    <!-- form start -->
    <form>
        <div class="box-body">
            <div class="row">
                <div class="form-group col-sm-4 col-xs-6">
                    <button type="button" class="btn btn-warning btn-flat" v-on:click="onSubmit">保 存</button>
                    <button type="button" class="btn btn-success btn-flat" v-on:click="showModal()">导入商品</button>
                    <button type="button" class="btn btn-default btn-flat" v-on:click="print">打印</button>
                    <a class="btn btn-default btn-flat" href="/Stocktaking/Index">取 消</a>
                    <input type="hidden" v-model="model.id" />
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm-2 col-xs-3">
                    <div class="input-group ">
                        <input type="hidden" class="form-control" v-model="model.storeId">
                        <input type="text" class="form-control" v-model="selectStore.name" placeholder="选择门店" readonly>
                        <span class="input-group-btn">
                            <button class="btn btn-flat btn-default" type="button" v-on:click="showStore"><i class="fa fa-search"></i></button>
                        </span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-4 col-sm-4"></div>
                    <div class="col-xs-4 col-sm-4"><h3 class="text-center text-success" style="border-bottom:2px solid;padding-bottom:1px;"><b>盘点单</b></h3></div>
                    <div class="col-xs-4 col-sm-4"></div>
                </div>
                <div class="row">
                    <div class="col-xs-4 col-sm-4">
                        <span>单据号：</span>
                    </div>
                    <div class="col-xs-4 col-sm-4 text-center">
                    </div>
                    <div class="col-xs-4 col-sm-4 ">
                        <span v-bind:class="checkStartDate">货架号：{{model.startDate}}</span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-4 col-sm-4">
                        <span>门店：{{selectStore.name}}</span>
                    </div>
                    <div class="col-xs-4 col-sm-4 text-center">
                    </div>
                    <div class="col-xs-4 col-sm-4">
                        <span>制单日期：@DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")</span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12 col-sm-12">
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th style="width:90px;"></th>
                                        <th style="width:50px;">序号</th>
                                        <th style="width:150px;">商品编码</th>
                                        <th>条码</th>
                                        <th>品名</th>
                                        <th>规格</th>
                                        <th>单位</th>
                                        <th>原价</th>
                                        <th style="width:200px;">现价</th>
                                        <th>合同效期</th>
                                    </tr>
                                </thead>
                                <tbody id="tbody">
                                    <tr v-for="(index,item) in products">
                                        <td>
                                            <button type="button" class="btn btn-flat  btn-sm" title="添加行" v-on:click="addRow($event)"><span class="fa fa-plus"></span></button>
                                            <button type="button" class="btn btn-flat  btn-sm" v-show="index>0" title="删除行" v-on:click="removeRow(index)"><span class="fa fa-trash"></span></button>
                                        </td>
                                        <td class="text-center">{{index+1}}</td>
                                        <td>
                                            <input type="text" class="form-control productCode" v-model="item.ProductCode" v-on:keyup.enter="inputProduct(item.ProductCode,index)" placeholder="录入编码或扫码" />
                                        </td>
                                        <td>{{item.BarCode}}</td>
                                        <td>{{item.ProductName}}</td>
                                        <td>{{item.Specification}}</td>
                                        <td>{{item.Unit}}</td>
                                        <td>￥{{item.ContractPrice}}</td>
                                        <td>
                                            <div class="input-group">
                                                <span class="input-group-addon">￥</span>
                                                <input type="text" class="form-control quantity" v-model="item.AdjustPrice" v-on:keyup.enter="inputNext" />
                                            </div>
                                        </td>
                                        <td>{{item.StartTime}}~{{item.EndTime}}</td>
                                    </tr>
                                </tbody>
                                @*<tfoot>
                                        <tr>
                                            <td></td>
                                            <td style="width:50px;"></td>
                                            <td>合计：</td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                    </tfoot>*@
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-3 col-sm-3">
                        <span>制单人： @ViewBag.CreatedByName</span>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <v-modal title="选择门店" ok-text="确 定" cancel-text="取 消" v-bind:callback="getStore" v-bind:show.sync="selectStore.modal" v-bind:effect="fade" width="50%">
        <div slot="modal-body" class="modal-body">
            <vue-table v-bind:columns="selectStore.gridColumns"
                       v-bind:url="selectStore.url" v-bind:show-toolbar="false"
                       v-bind:args="selectStore.searchArgs" v-bind:data.sync="selectStore.rows">
                <div class="row" style="margin-bottom:10px;" slot="customSearch">
                    <div class="col-xs-4 col-sm-3">
                        <input class="form-control" v-model="searchArgs.code" placeholder="门店编码" debounce="500" />
                    </div>
                    <div class="col-xs-4 col-sm-3">
                        <input class="form-control" v-model="selectStore.searchArgs.name" placeholder="门店名" debounce="300" />
                    </div>
                </div>
            </vue-table>
        </div>
    </v-modal>
</div>
@{Html.RenderPartial("VueTableTemplate");}
@section scripts{
    <script src="~/Content/Vue/vuetable/vuetable.js"></script>
    <script>
        $("doucument").ready(function () {
            var demo = new Vue({
                components: {
                    'v-modal': VueStrap.modal,
                    'v-input': VueStrap.input
                },
                el: '#app',
                data: {
                    valid: false,
                    modal: false,
                    model: {
                        id: 0,
                        code: '',
                        storeId: 0,
                        supplierId: 0,
                        items: '',
                        startDate: '',
                        endDate: ''
                    },
                    startDateInvalid: false,
                    endDateInvalid: false,
                    products: [{ ProductId: 0, ProductCode: '', BarCode: '', ProductName: '', Specification: '', Unit: '', AdjustPrice: 0, ContractPrice: 0, StartTime: '', EndTime: '' }],
                    totalQuantity: 0,
                    inputProducts: '',
                    selectStore: {
                        modal: false,
                        name: '',
                        gridColumns: [
                            { name: 'Code', localName: '门店编码' },
                           { name: 'Name', localName: '门店名' },
                           { name: 'FullName', localName: '区域', width: '200' }
                        ],
                        url: "/Store/LoadData",
                        searchArgs: { name: '' },
                        rows: []
                    }
                },
                methods: {
                    onSubmit: function () {
                        //获取选择节点
                        var _self = this;
                        if (_self.startDateInvalid) { bootbox.alert("生效日期只能在合同效期内"); return; }
                        if (_self.endDateInvalid) { bootbox.alert("生效日期只能在合同效期内"); return; }
                        var data = "";
                        for (var i = 0; i < _self.products.length; i++) {
                            var item = _self.products[i];
                            if (item.ProductId > 0 && item.ContractPrice > 0) {
                                data += "{\"ProductId\":" + item.ProductId + ",\"AdjustPrice\":" + item.AdjustPrice
                                     + ",\"ContractPrice\":" + item.ContractPrice + "},";
                            }
                        }
                        if (data == "") {
                            bootbox.alert("请导入商品");
                            return;
                        }
                        data = data.substring(0, data.length - 1);
                        data = "[" + data + "]";
                        _self.model.items = data;
                        var v_data = _self.model;
                        $.post("/Stocktaking/Create", v_data, function (result) {
                            if (result.success) {
                                bootbox.alert("保存成功！", function () {
                                    window.location.href = "/Stocktaking/Create";
                                });
                            }
                            else {
                                bootbox.alert(result.error);
                            }
                        }, "json");
                    },
                    importProduct: function () {
                        var inputItems = this.inputProducts;
                        var _self = this;
                        if (inputItems == "") { return; }
                        if (_self.model.supplierId == 0) { bootbox.alert("请选择供应商"); return; }
                        if (_self.model.storeId == 0) { bootbox.alert("请选择门店"); return; }
                        var data = {
                            inputProducts: inputItems,
                            supplierId: _self.model.supplierId,
                            storeId: _self.model.storeId
                        }
                        $.post("/Stocktaking/ImportProduct", data, function (result) {
                            if (result.success) {
                                _self.products = [];
                                result.data.forEach(function (item) {
                                    _self.products.push(item);
                                });
                                _self.modal = false;
                                //设置焦点,延迟500，等待vue.js 渲染完毕
                                setTimeout(function () {
                                    var selector = "tr:eq(0)";
                                    var row = $("#tbody").find(selector);
                                    row.find("input.quantity").focus().select();
                                }, 300);
                            }
                            else {
                                bootbox.alert(result.error);
                            }
                        }, "json");
                    },
                    showModal: function () {
                        this.modal = true;
                    },
                    addRow: function (event) {
                        this.products.push({ ProductId: 0, ProductCode: '', BarCode: '', ProductName: '', Specification: '', Unit: '', AdjustPrice: 0, ContractPrice: 0, StartTime: '', EndTime: '' });
                        //设置焦点
                        var target = event.srcElement || event.target;
                        var row = target.localName == "button" ? $(target).parent().parent() : $(target).parent().parent().parent();
                        setfocus();
                        function setfocus() {
                            setTimeout(function () {
                                var nextRow = row.next();
                                if (nextRow) { // 等待 vue.js 渲染完成后，才设置
                                    nextRow.find("input.productCode").focus().select();
                                }
                                else {
                                    setfocus();
                                }
                            }, 200);
                        }
                    },
                    removeRow: function (index) {
                        this.products.splice(index, 1);
                    },
                    inputProduct: function (codeOrBarCode, index) {
                        var _self = this;
                        if (codeOrBarCode == "") { return; }
                        if (_self.model.supplierId == 0) { bootbox.alert("请选择供应商"); return; }
                        if (_self.model.storeId == 0) { bootbox.alert("请选择门店"); return; }
                        var data = {
                            productCodeOrBarCode: codeOrBarCode,
                            supplierId: _self.model.supplierId,
                            storeId: _self.model.storeId
                        }
                        //设置焦点
                        $.get("/Stocktaking/GetItem", data, function (result) {
                            if (result.success) {
                                _self.products.$set(index, result.data);
                                //设置焦点,延迟500，等待vue.js 渲染完毕
                                setTimeout(function () {
                                    var selector = "tr:eq(" + index + ")";
                                    var row = $("#tbody").find(selector);
                                    row.find("input.quantity").focus().select();
                                }, 300);
                            }
                            else {
                                bootbox.alert(result.error);
                            }
                        }, "json");

                    },
                    inputNext: function (event) {
                        var target = event.target;
                        var row = $(target).parent().parent().parent();
                        if (row.next().length > 0) {
                            row.next().find("input.quantity").focus().select();
                        }
                        else {
                            this.addRow(event);
                        }
                    },
                    showStore: function () {
                        this.selectStore.modal = true;
                    },
                    getStore: function () {
                        this.clearItems();
                        var selecteds = this.selectStore.rows.filter(function (item) {
                            return item.checked;
                        });
                        if (selecteds) {
                            this.model.storeId = selecteds[0].Id;
                            this.selectStore.name = selecteds[0].Name;
                            this.selectStore.modal = false;
                        }
                    },
                    print: function () {

                    },
                    clearItems: function () {
                        if (this.products.length > 0) {
                            this.products = [{ ProductId: 0, ProductCode: '', BarCode: '', ProductName: '', Specification: '', Unit: '', AdjustPrice: 0, ContractPrice: 0, StartTime: '', EndTime: '' }];
                        }
                    }
                },
                computed: {
                    checkStartDate: function () {
                        var _self = this;
                        var error = false;
                        if (_self.model.startDate == "") { var error = true; }
                        var selectStartDate = convertToDate(_self.model.startDate);
                        if (_self.products.length > 0) {
                            var item = _self.products[0];
                            var startDate = convertToDate(item.StartTime);
                            var endDate = convertToDate(item.EndTime);
                            if (selectStartDate >= startDate && selectStartDate <= endDate) {
                                error = false;
                            }
                            else {
                                error = true;
                            }
                        }
                        else {
                            error = true;
                        }
                        _self.startDateInvalid = error;
                        return {
                            'text-danger': error,
                            'has-error': error
                        }
                    },
                    checkEndDate: function () {
                        var _self = this;
                        var error = false;
                        if (_self.model.endDate == "") { var error = true; }
                        var selectEndDate = convertToDate(_self.model.endDate);
                        if (_self.products.length > 0) {
                            var item = _self.products[0];
                            var startDate = convertToDate(item.StartTime);
                            var endDate = convertToDate(item.EndTime);
                            if (selectEndDate >= startDate && selectEndDate <= endDate) {
                                error = false;
                            }
                            else {
                                error = true;
                            }
                        }
                        else {
                            error = true;
                        }
                        _self.endDateInvalid = error;
                        return {
                            'text-danger': error,
                            'has-error': error
                        }
                    }
                }
            });

        });

        function convertToDate(value) {
            return new Date(value.replace(/\-/g, "\/"));
        }

    </script>
}






