@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
    .dataRow div {
        margin-bottom: 0px;
    }
</style>
<!-- demo root element -->
<div id="app" class="box box-primary">
    <div class="box-header with-border">
        <ol class="breadcrumb" style="padding:0px;margin:1px;">
            <li><a href="/AdjustSalePrice/Index"><i class="fa fa-dashboard"></i>商品调价单管理</a></li>
            <li class="active"><a href="/AdjustSalePrice/Create">新增商品调价单</a></li>
        </ol>
    </div>
    <!-- /.box-header -->
    <!-- form start -->
    <form>
        <div class="box-body">
            <div class="row">
                <div class="form-group col-sm-4 col-xs-6">
                    <button type="button" class="btn btn-warning btn-flat" v-on:click="onSubmit">保 存</button>
                    <button type="button" class="btn btn-success btn-flat" v-on:click="showModal()">导入商品</button>
                    <a class="btn btn-default btn-flat" href="/AdjustSalePrice/Index">取 消</a>
                    <input type="hidden" v-model="model.id" />
                </div>
            </div>          
            <div class="row">
                <div class="col-xs-4 col-sm-4"></div>
                <div class="col-xs-4 col-sm-4"><h3 class="text-center text-success" style="border-bottom:2px solid;padding-bottom:1px;"><b>商品调价单</b></h3></div>
                <div class="col-xs-4 col-sm-4"></div>
            </div>
            <div class="row">
                <div class="col-xs-4 col-sm-4">
                    <span></span>
                </div>
                <div class="col-xs-4 col-sm-4 text-center">
                </div>
                <div class="col-xs-4 col-sm-4">
                    <span>状态：未生效</span>
                </div>
            </div>           
            <div class="row">
                <div class="col-xs-4 col-sm-4">
                    <span>单据号：</span>
                </div>
                <div class="col-xs-4 col-sm-4 text-center">
                </div>
                <div class="col-xs-4 col-sm-4">
                    <span>制单日期：@DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")</span>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12">
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th style="width:90px;"></th>
                                    <th style="width:50px;">序号</th>
                                    <th style="width:150px;">商品编码</th>
                                    <th>条码</th>
                                    <th>品名</th>
                                    <th>规格</th>
                                    <th>单位</th>
                                    <th title="最新合同参考进价">进价</th>
                                    <th>原价</th>
                                    <th style="width:200px;">现价</th>
                                    <th>毛利额</th>
                                    <th>毛利率</th>
                                </tr>
                            </thead>
                            <tbody id="tbody">
                                <tr v-for="(index,item) in products">
                                    <td>
                                        <button type="button" class="btn btn-flat  btn-sm" title="添加行" v-on:click="addRow($event)"><span class="fa fa-plus"></span></button>
                                        <button type="button" class="btn btn-flat  btn-sm" v-show="index>0" title="删除行" v-on:click="removeRow(index)"><span class="fa fa-trash"></span></button>
                                    </td>
                                    <td class="text-center">{{index+1}}</td>
                                    <td>
                                        <input type="text" class="form-control productCode" v-model="item.ProductCode" v-on:keyup.enter="inputProduct(item.ProductCode,index)" placeholder="录入编码或扫码" />
                                    </td>
                                    <td>{{item.BarCode}}</td>
                                    <td>{{item.ProductName}}</td>
                                    <td>{{item.Specification}}</td>
                                    <td>{{item.Unit}}</td>
                                    <td>￥{{item.ContractPrice}}</td>
                                    <td>￥{{item.SalePrice}}</td>
                                    <td>
                                        <div class="input-group">
                                            <span class="input-group-addon">￥</span>
                                            <input type="text" class="form-control quantity" v-model="item.AdjustPrice" v-on:keyup.enter="inputNext" />
                                        </div>
                                    </td>
                                    <td v-bind:class="{'text-danger':item.Profit<=0}">{{item.Profit}}</td>
                                    <td v-bind:class="{'text-danger':item.Profit<=0}">{{item.ProfitMargin}}%</td>
                                </tr>
                            </tbody>
                            <tfoot>
                                    <tr>
                                        <td></td>
                                        <td style="width:50px;"></td>
                                        <td>合计：</td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>                                  
                                        <td></td>
                                        <td>{{profitTotal}}</td>
                                        <td></td>                                        
                                    </tr>
                                </tfoot>
                        </table>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-3 col-sm-3">
                    <span>制单人： @ViewBag.CreatedByName</span>
                </div>
                @*<div class="col-xs-3 col-sm-3">
                        <span>供应商：</span>
                    </div>
                    <div class="col-xs-3 col-sm-3">
                        <span>收货人：</span>
                    </div>
                    <div class="col-xs-3 col-sm-3">
                        <span>入库人：</span>
                    </div>*@
            </div>
        </div>
    </form>
    <!-- modal -->
    <v-modal title="导入商品" ok-text="确 定" cancel-text="取 消" v-bind:callback="importProduct" v-bind:show.sync="modal" v-bind:effect="fade" width="300">
        <div slot="modal-body" class="modal-body">
            <v-input type="textarea" help="请将excel中商品编号和售价两列粘贴到文本框中" v-bind:value.sync="inputProducts" placeholder="输入商品" required icon></v-input>
        </div>
    </v-modal>   
</div>
@section scripts{
    <script>
        $("doucument").ready(function () {
            var demo = new Vue({
                components: {
                    'v-modal': VueStrap.modal,
                    'v-input': VueStrap.input
                },
                el: '#app',
                data: {
                    valid: false,
                    modal: false,
                    model: {
                        id: 0,
                        code: '',                       
                        items: ''
                    },
                    products: [{
                        ProductId: 0, ProductCode: '', BarCode: '', ProductName: '', Specification: '',
                        Unit: '', SalePrice: 0, AdjustPrice: 0, ContractPrice: 0, Profit: 0, ProfitMargin: 0
                    }],
                    inputProducts: ''                    
                },
                methods: {
                    onSubmit: function () {
                        //获取选择节点
                        var _self = this;                       
                        var data = "";
                        for (var i = 0; i < _self.products.length; i++) {
                            var item = _self.products[i];
                            if (item.ProductId > 0 && item.ContractPrice > 0) {
                                data += "{\"ProductId\":" + item.ProductId + ",\"AdjustPrice\":" + item.AdjustPrice
                                     + ",\"SalePrice\":" + item.SalePrice + "},";
                            }
                        }
                        if (data == "") {
                            bootbox.alert("请导入商品");
                            return;
                        }
                        data = data.substring(0, data.length - 1);
                        data = "[" + data + "]";
                        _self.model.items = data;
                        var v_data = _self.model;
                        $.post("/AdjustSalePrice/Create", v_data, function (result) {
                            if (result.success) {
                                bootbox.alert("保存成功！", function () {
                                    window.location.href = "/AdjustSalePrice/Create";
                                });
                            }
                            else {
                                bootbox.alert(result.error);
                            }
                        }, "json");
                    },
                    importProduct: function () {
                        var inputItems = this.inputProducts;
                        var _self = this;
                        if (inputItems == "") { return; }                      
                        var data = {
                            inputProducts: inputItems                           
                        }
                        $.post("/AdjustSalePrice/ImportProduct", data, function (result) {
                            if (result.success) {
                                _self.products = [];
                                result.data.forEach(function (item) {
                                    _self.products.push(item);
                                });
                                _self.modal = false;
                                //设置焦点,延迟500，等待vue.js 渲染完毕
                                setTimeout(function () {
                                    var selector = "tr:eq(0)";
                                    var row = $("#tbody").find(selector);
                                    row.find("input.quantity").focus().select();
                                }, 300);
                            }
                            else {
                                bootbox.alert(result.error);
                            }
                        }, "json");
                    },
                    showModal: function () {
                        this.modal = true;
                    },
                    addRow: function (event) {
                        this.products.push({
                            ProductId: 0, ProductCode: '', BarCode: '', ProductName: '', Specification: '',
                            Unit: '', SalePrice: 0, AdjustPrice: 0, ContractPrice: 0, Profit: 0, ProfitMargin: 0
                        });
                        //设置焦点
                        var target = event.srcElement || event.target;
                        var row = target.localName == "button" ? $(target).parent().parent() : $(target).parent().parent().parent();
                        setfocus();
                        function setfocus()
                        {
                            setTimeout(function () {
                                var nextRow = row.next();
                                if (nextRow) { // 等待 vue.js 渲染完成后，才设置
                                    nextRow.find("input.productCode").focus().select();
                                }
                                else {
                                    setfocus();
                                }
                            }, 200);
                        }
                    },
                    removeRow: function (index) {
                        this.products.splice(index, 1);
                    },
                    inputProduct: function (codeOrBarCode, index) {
                        var _self = this;
                        if (codeOrBarCode == "") { return; }                      
                        var data = {
                            productCodeOrBarCode: codeOrBarCode
                        }
                        //设置焦点
                        $.get("/AdjustSalePrice/GetItem", data, function (result) {
                            if (result.success) {
                                _self.products.$set(index, result.data);
                                //设置焦点,延迟500，等待vue.js 渲染完毕
                                setTimeout(function () {
                                    var selector = "tr:eq(" + index + ")";
                                    var row= $("#tbody").find(selector);
                                    row.find("input.quantity").focus().select();
                                }, 300);
                            }
                            else {
                                bootbox.alert(result.error);
                            }
                        }, "json");

                    },
                    inputNext: function (event) {
                        var target = event.target;
                        var row = $(target).parent().parent().parent();
                        if (row.next().length > 0) {
                            row.next().find("input.quantity").focus().select();
                        }
                        else {
                            this.addRow(event);
                        }
                    },                    
                    print: function () {

                    },
                    clearItems:function(){
                        if(this.products.length>0)
                        {
                            this.products = [{
                                ProductId: 0, ProductCode: '', BarCode: '', ProductName: '', Specification: '',
                                Unit: '', SalePrice: 0, AdjustPrice: 0, ContractPrice: 0, Profit: 0, ProfitMargin: 0
                            }];
                        }
                    }                   
                },
                computed: {
                    profitTotal: function () {
                        var _self = this;
                        var _profitTotal = 0;
                        _self.products.forEach(function (item) {
                            item.Profit = item.AdjustPrice - item.ContractPrice;
                            if (item.AdjustPrice > 0)
                            {
                                var result = item.Profit / item.AdjustPrice * 100;
                                item.ProfitMargin = result.toFixed(2);
                            }
                            _profitTotal += item.Profit;
                        });                      

                        return _profitTotal;
                    }                   
                }
            });

        });
       

    </script>
}









