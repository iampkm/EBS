@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@section styles{
    <link href="~/Content/zTree.min.css" rel="stylesheet" />
    <style>
        .ztree li span {
            font-size: 14px;
        }
    </style>
}
<!-- demo root element -->
<div id="app" class="box box-primary">
    <div class="box-header with-border">
        <ol class="breadcrumb" style="padding:0px;margin:1px;">
            <li><a href="/Shelf/Index"><i class="fa fa-dashboard"></i>货架管理</a></li>
        </ol>
    </div>
    <!-- /.box-header -->
    <!-- form start -->
    <form v-on:submit.prevent="onSubmit">
        <div class="box-body">
            <div class="row">                
                <div class="col-sm-2 col-xs-3" v-show="selectStore.view">
                    <div class="input-group ">
                        <input type="hidden" class="form-control" v-model="model.storeId">
                        <input type="text" class="form-control" v-model="selectStore.name" placeholder="选择门店" readonly>
                        <span class="input-group-btn">
                            <button class="btn btn-flat btn-default" type="button" v-on:click="showStore"><i class="fa fa-search"></i></button>
                            @*<button class="btn btn-flat btn-default" type="button" v-on:click="clearStore"><i class="fa fa-eraser"></i></button>*@
                        </span>
                    </div>
                </div>
                <div class="col-sm-10 col-xs-9">
                    <button type="button" class="btn btn-warning btn-flat" v-on:click="create()">
                        <span class="glyphicon glyphicon-plus">货架</span>
                    </button>
                    <button type="button" class="btn btn-warning btn-flat" v-on:click="createLayer()">
                        <span class="glyphicon glyphicon-plus">层</span>
                    </button>
                    @*<button type="button" class="btn btn-warning btn-flat" v-on:click="showAddProduct()" title="添加商品">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true">商品</span>
                    </button>*@
                    <button type="button" class="btn btn-success btn-flat" v-on:click="edit()"><span class="glyphicon glyphicon-pencil">修改货架</span></button>
                    <button type="button" class="btn btn-success btn-flat" v-on:click="remove()"><span class="glyphicon glyphicon-trash">删除货架</span></button>
                    <button type="button" class="btn btn-success btn-flat" v-on:click="cancelSelect()"><span class="glyphicon glyphicon-minus">取消选择</span></button>
                    <button type="button" class="btn btn-success btn-flat" v-on:click="reloadTree()">
                        <span class="glyphicon glyphicon-refresh">刷新</span>
                    </button>
                    <button type="button" class="btn btn-default btn-flat" v-on:click="PrintShelfGrid()" title="打印棚格图">
                        <span class="glyphicon glyphicon-print" aria-hidden="true">棚格图</span>
                    </button>
                    <button type="button" class="btn btn-default btn-flat" v-on:click="PrintShelfStocktaing()" title="打印盘点表">
                        <span class="glyphicon glyphicon-print" aria-hidden="true">盘点表</span>
                    </button>
                    
                    @*<button type="button" class="btn btn-warning btn-flat" v-on:click="deleteProduct()" title="删除商品">
                        <span class="glyphicon glyphicon-print" aria-hidden="true">删除商品</span>
                    </button>*@
                </div>     
            </div>
            <div class="row" style="margin-top:10px;">               
                <div class="col-xs-3 col-sm-3" > 
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            货架列表
                        </div>
                        <div class="panel-body" style="overflow-y:auto;height:500px;">
                            <ul id="ztree" class="ztree"></ul>
                        </div>
                    </div>                  
                   
                </div>
                <div class="col-xs-9 col-sm-9">
                    <div class="row">
                        <div class="col-xs-5 col-sm-4">
                            <div class="input-group">
                                <input type="text" class="form-control" v-model="shelfProduct.productCodeOrBarCode" v-on:keyup.enter="saveProduct" placeholder="录入商品编码或条码回车" />
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-primary btn-flat" v-on:click="saveProduct()"><span class="glyphicon glyphicon-plus">添加商品</span></button>
                                    <button type="button" class="btn btn-danger btn-flat" v-on:click="removeProduct()"><span class="glyphicon glyphicon-trash">删除商品</span></button>
                                </span>
                            </div>
                        </div>
                    </div>
                    <hr style="border:1px solid #808080" />
                    <vue-table v-ref:vtable v-bind:columns="gridColumns"
                               v-bind:url="url"
                               v-bind:args="searchArgs" v-bind:data.sync="rows" v-bind:show-toolbar="showTool" v-bind:show-checkbox="true">
                        <div class="row" style="margin-bottom:10px;" slot="customSearch">
                            <div class="col-xs-2">
                                <input class="form-control" v-model="searchArgs.productCodeOrBarCode" placeholder="商品编码/条码" debounce="500" />
                            </div>
                            <div class="col-xs-2">
                                <input class="form-control" v-model="searchArgs.productName" placeholder="商品名称" debounce="500" />
                            </div>
                        </div>
                    </vue-table>
                    <p>
                        友情提示：添加商品时，如选中一个商品，将插入选中商品的前面。
                    </p>
                </div>  
            </div>
        </div>
        <!-- /.box-body -->
        <div class="box-footer">

        </div>
    </form>
    <!-- /.box-footer -->
    <v-modal v-bind:title="modalTitle" ok-text="保 存" cancel-text="取 消" v-bind:callback="onSubmit" v-bind:show.sync="modal" v-bind:effect="fade" width="800">
        <div slot="modal-body" class="modal-body">
            <div class="row">
                <div class="form-group col-sm-4 col-xs-4">                    
                    <input type="hidden" v-model="model.pId" />                  
                    <v-input type="text" label="货架编码：" v-bind:value.sync="model.code" placeholder="为空自动生成" maxlength="4" pattern="^[0-9]+$" icon></v-input>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4 col-xs-4">
                    <v-input type="text" label="货架名：" v-bind:value.sync="model.name" placeholder="货架名" required icon></v-input>
                </div>
            </div>
        </div>
    </v-modal>
    <v-modal title="选择门店" ok-text="确 定" cancel-text="取 消" v-bind:callback="getStore" v-bind:show.sync="selectStore.modal" v-bind:effect="fade" width="60%">
        <div slot="modal-body" class="modal-body">
            <div style="min-height:350px;max-height:500px;overflow:auto;"><ul id="storeTree" class="ztree"></ul></div>
        </div>
    </v-modal>
    <v-modal title="添加商品" ok-text="保 存" cancel-text="取 消" v-bind:callback="saveProduct" v-bind:show.sync="shelfProduct.modal" v-bind:effect="fade" width="800">
        <div slot="modal-body" class="modal-body">
            <div class="row">
                <div class="col-sm-4 col-xs-4">                   
                    <input type="text" class="form-control" v-model="shelfProduct.productCodeOrBarCode" v-on:keyup.enter="saveProduct" placeholder="录入商品编码或条码" />
                </div>
            </div>
        </div>
    </v-modal>
</div>
<div id="printBox"></div>
@{Html.RenderPartial("VueTableTemplate");}
@section scripts{
    <script src="~/Scripts/jquery.ztree.all-3.5.min.js"></script>
<script src="~/Content/Vue/vuetable/vuetable.js"></script>
<script src="~/Scripts/jquery.PrintArea.js"></script>
    <script>
        var vue;
        $("doucument").ready(function () {

             vue = new Vue({
                components: {
                    'v-modal': VueStrap.modal,
                    'v-input': VueStrap.input,
                    'v-form': VueStrap.formGroup
                },
                el: '#app',
                data: {
                    modal: false,
                    modalTitle:"新增货架",
                    valid: false,
                    operate:'add',                    
                    model: {
                        id:0,
                        name: '',
                        pId: 0,
                        code:'',                       
                        showName:'',
                        storeId:@ViewBag.StoreId,
                    },
                    selectStore: {
                        modal: false,
                        name: '@ViewBag.StoreName',
                        view:@ViewBag.View,                    
                    },
                    gridColumns: [
                       { name: 'Code', localName: '货架码', width: '100' },                       
                       { name: 'ProductCode', localName: '编码' },
                       { name: 'BarCode', localName: '条码' },
                       { name: 'ProductName', localName: '品名' , width: '200'},
                       { name: 'Specification', localName: '规格' },
                       { name: 'SalePrice', localName: '售价' }
                    ],
                    url: "/Shelf/QueryShelfProduct",
                    searchArgs: { storeId: 0,code:'',productCodeOrBarCode:'',productName:'' },
                    rows: [],
                    showTool:false,
                    shelfProduct:{
                        modal:false,
                        insertBefore:false, // 是否插入
                        productCodeOrBarCode:''
                    }
                },
                methods: {
                    onSubmit: function () {
                        //获取选择节点
                        var v_data = this.model;
                        var v_url ="/Shelf/CreateShelf" ;
                        if(this.operate=="edit"){
                            v_url ="/Shelf/Edit" ;
                        }
                        var v_self = this;
                        if(this.model.storeId==0){
                            bootbox.alert("请选择门店");return;
                        }
                        $.post(v_url, v_data, function (result) {
                            if (result.success) {
                                v_self.modal = false;                               
                                v_self.refreshTree(result.data);
                                v_self.model.id = 0;
                                v_self.model.pId = 0;
                                v_self.model.name="";
                                v_self.model.code="";
                                v_self.model.showName="";
                            }
                            else {
                                bootbox.alert(result.error);
                            }
                        }, "json");
                    },
                    refreshTree:function(node){
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var selectedNode = treeObj.getSelectedNodes()[0];
                        if(this.operate=="add")
                        {
                            treeObj.addNodes(selectedNode, node);
                        }
                        else{
                            selectedNode.showName = this.model.code+"("+this.model.name+")";
                            treeObj.updateNode(selectedNode);
                        }

                    },
                    reloadTree:function()
                    {
                        //加载选择门店的货架数据
                        var selectStore = this.model.storeId;
                        if(selectStore==0){return;}
                        $.get("/Shelf/GetShelfTree", { storeId: selectStore }, function (result) {
                            if (result.success) {                                    
                                loadTree(result.data);
                            }
                            else {
                                bootbox.alert(result.error);
                            }
                        }, "json");
                    },
                    create: function () {
                        this.operate ="add";
                        this.cancelSelect(); //添加货架不需要选择节点                      
                        this.modal = true;
                    },
                    createLayer:function(){
                        this.operate ="add";
                        var v_self = this;
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var selectNode = treeObj.getSelectedNodes()[0];
                        if(selectNode&&selectNode.code.length==4)
                        {
                            var v_url="/Shelf/CreateLayer" ;
                            var v_data = {shelfId:selectNode.id }
                            $.post(v_url, v_data, function (result) {
                                if (result.success) {  
                                    v_self.refreshTree(result.data);
                                  //  reloadTree(v_self.storeId);
                                    v_self.model.id = 0;
                                    v_self.model.pId = 0;
                                    v_self.model.name="";
                                    v_self.model.code="";
                                    v_self.model.showName="";
                                }
                                else {
                                    bootbox.alert(result.error);
                                }
                            }, "json");
                        }
                        else
                        {
                            bootbox.alert("请选择一个货架");
                        }
                    },
                    edit:function(){

                        this.operate ="edit";
                        this.modalTitle="修改货架"
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var selectNode = treeObj.getSelectedNodes()[0];
                        //只能编辑货架
                        if(selectNode&&selectNode.code.length==4)
                        {
                            var parentNode = selectNode.getParentNode();
                            if(parentNode)
                            {
                                this.model.pId = parentNode.id;
                            }
                            this.model.id = selectNode.id;
                            this.model.name = selectNode.name;
                            this.model.code = selectNode.code;
                            this.modal = true;
                        }
                        else
                        {
                            bootbox.alert("请选择一个要修改的货架");
                        }
                    },
                    remove:function(){
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var selectNode = treeObj.getSelectedNodes()[0];
                        if(selectNode==null){
                            bootbox.alert("请选择一个货架节点");
                            return;
                        }
                        var _self =this;
                        bootbox.confirm("该操作将删除所有货架及商品，你确定要删除吗？", function (result) {
                            if (result) {
                                $.post("/Shelf/Remove", { id: selectNode.id,code:selectNode.code}, function (result) {
                                    if (result.success) {
                                        //删除子节点
                                       // treeObj.removeChildNodes(selectNode);
                                        // treeObj.removeNode(selectNode);
                                        _self.reloadTree();
                                    }
                                    else {
                                        bootbox.alert(result.error);
                                    }
                                }, "json");
                            }
                        });
                    },
                    removeProduct:function(){
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var selectNode = treeObj.getSelectedNodes()[0];
                        var layerId  =0;
                        if(selectNode&&selectNode.code.length==6)
                        {
                            var layerId = selectNode.id;
                        }
                        else{
                            bootbox.alert("请选择货架层");
                            return ;
                        }

                        //选择插入商品位置，默认为0，表示从末尾插入
                        var rowIds = "";
                        var idArray = new Array();
                        var selectRow = this.rows.filter(function (item, index) {
                            if (item.checked) {
                                idArray.push(item.Id);
                                return true;
                            }
                        });
                        if (idArray.length == 0) {
                            bootbox.alert("请勾选要删除的商品");
                            return ;
                        } 
                        rowIds = idArray.join();
                        var postData = {
                            storeId:this.model.storeId,
                            shelfLayerId:layerId,
                            ids:rowIds
                        }
                        var _self =this;
                        bootbox.confirm("你确定要删除吗？", function (result) {
                            if (result) {
                                $.post("/Shelf/RemoveProduct", postData, function (result) {
                                    if (result.success) {
                                        //刷新节点树
                                        treeObj.removeChildNodes(selectNode); 
                                        result.data.forEach(function(item,index){
                                            treeObj.addNodes(selectNode,-1,item);
                                        });
                                        //刷新表格
                                        _self.$refs.vtable.loadData();
                                    }
                                    else {
                                        bootbox.alert(result.error);
                                    }
                                }, "json");
                            }
                        });
                    },
                    cancelSelect:function()
                    {
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var nodes = treeObj.getSelectedNodes();
                        if (nodes.length>0) {
                            treeObj.cancelSelectedNode(nodes[0]);
                        }
                    },
                    showStore: function () {
                        this.selectStore.modal = true;
                    },
                    clearStore: function () {
                        this.model.storeId = 0;
                        this.selectStore.name = "";
                    },
                    getStore: function () {
                        var treeObj = $.fn.zTree.getZTreeObj("storeTree"); 
                        var selecteds= treeObj.getCheckedNodes(true);
                        if (selecteds) {
                            var idArray = new Array();
                            var nameArray = new Array();
                            selecteds.forEach(function(item){
                                if(item.level==1){
                                    idArray.push(item.id);
                                    nameArray.push(item.name);
                                }
                            })
                            if(idArray.length>0){
                                this.model.storeId = idArray[0];
                                this.selectStore.name = nameArray[0];
                                this.selectStore.modal = false;
                                this.reloadTree(); 
                            }
                            else
                            {
                                bootbox.alert("请选择一个门店");
                            }
                           
                        }
                    },
                     PrintShelfGrid:function() {
                        this.PrintTemplate("/Shelf/PrintShelfGrid");
                    },
                     PrintShelfStocktaing:function() {
                        this.PrintTemplate("/Shelf/PrintShelfStocktaking");
                    },
                     PrintTemplate:function(templateUrl) {
                        //选择所有货架
                         var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        
                         var shelfIdArray = new Array();
                         var nodes= treeObj.getCheckedNodes(true);
                         if(nodes.length==0)
                         {
                             bootbox.alert( "选择打印的货架");return;
                         }
                         nodes.forEach(function(item){
                             if(item.code.length==4){
                                 shelfIdArray.push(item.id);
                             }                            
                         });                         
                         var selectedNodes=shelfIdArray.join() ;
                        $.get(templateUrl, { shelfIds: selectedNodes }, function(result) {
                            $("#printBox").html(result);
                            $("#printBox").attr("class", "show");
                            $("#printBox").printArea();
                            $("#printBox").attr("class", "hide");
                        }, "text");
                     },
                     showAddProduct:function(){
                         var treeObj = $.fn.zTree.getZTreeObj("ztree");
                         var selectNode = treeObj.getSelectedNodes()[0];
                         if(selectNode&&selectNode.code.length>4)
                         {
                             this.shelfProduct.modal = true;
                         }
                         else
                         {
                             bootbox.alert("请选择一个货架层，或者一个要插入的商品列");
                         }
                         
                     },
                     saveProduct:function(){
                         // 必须选择货架
                         var treeObj = $.fn.zTree.getZTreeObj("ztree");
                         var selectNode = treeObj.getSelectedNodes()[0];
                         var layerId  =0;
                         if(selectNode&&selectNode.code.length==6)
                         {
                             var layerId = selectNode.id;
                         }
                         else{
                             bootbox.alert("请选择要添加商品的货架层");
                             return ;
                         }

                         //选择插入商品位置，默认为0，表示从末尾插入
                         var beforeProductId = 0;
                         var selectRow = this.rows.filter(function (item, index) {
                             if (item.checked) {
                                 return true;
                             }
                         });
                         if (selectRow.length > 0) {
                             beforeProductId = selectRow[0].Id;
                         }   
                         
                        var v_url="/Shelf/CreateProduct" ;
                        var v_data = {
                            storeId:this.model.storeId,
                            shelfLayerId:layerId,
                            productCodeOrBarCode: this.shelfProduct.productCodeOrBarCode,
                            shelfProductId:beforeProductId
                        };
                        var _self = this;
                        $.post(v_url, v_data, function (result) {
                            if (result.success) { 
                                //刷新节点树
                                treeObj.removeChildNodes(selectNode); 
                                result.data.forEach(function(item,index){
                                    treeObj.addNodes(selectNode,-1,item);
                                });
                                //刷新表格
                                _self.$refs.vtable.loadData();
                            }
                            else {
                                bootbox.alert(result.error);
                            }
                        }, "json");
          
                     }
                }
            });
             var zNodes =@Html.Raw(ViewBag.Tree) ; 
            loadTree(zNodes);

            //加载门店
            var zTreeObj;           
            var setting = {
                check: {
                    enable:true
                },               
                async: {
                    enable: true,
                    url: "/Store/LoadStore",
                    //autoParam: ["id", "name"]
                },
                callback:{
                    onClick:function(event, treeId, treeNode){
                        //点击展开/折叠节点
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var open = !treeNode.open;
                        treeObj.expandNode(treeNode, open, false, false);
                        // vue.searchArgs.categoryId =treeNode.id;                      
                    }
                }
            };           
            zTreeObj = $.fn.zTree.init($("#storeTree"), setting);
        });

        function loadTree(zNodes)
        {
            var zTreeObj;
            var setting = {
                data: {
                    key:{name:"showName"}
                },
                check:{enable:true,chkboxType: { "Y": "s", "N": "s" }},
                callback:{
                    onClick:function(event, treeId, treeNode){
                        //点击展开/折叠节点
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var open = !treeNode.open;
                        treeObj.expandNode(treeNode, open, false, false);
                        // vue.searchArgs.categoryId =treeNode.id;
                        // 查询货架商品 
                        vue.searchArgs.code = treeNode.code ;
                        vue.searchArgs.storeId = vue.model.storeId;
                       
                   }
                }
            };        
            zTreeObj = $.fn.zTree.init($("#ztree"), setting, zNodes);
        }



    </script>
}

