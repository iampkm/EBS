@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@section styles{
    <link href="~/Content/zTree.min.css" rel="stylesheet" />
    <style>
        .ztree li span {
            font-size: 14px;
        }
    </style>
}
<!-- demo root element -->
<div id="app" class="box box-primary">
    <div class="box-header with-border">
        <ol class="breadcrumb" style="padding:0px;margin:1px;">
            <li><a href="/AccessToken/Index"><i class="fa fa-dashboard"></i>EBS系统授权码</a></li>
        </ol>
    </div>
    <!-- /.box-header -->
    <!-- form start -->
    <form v-on:submit.prevent="onSubmit">
        <div class="box-body">
            <vue-table v-ref:vtable v-bind:columns="gridColumns"
                       v-bind:url="url"
                       v-bind:args="searchArgs" v-bind:data.sync="rows">
                <div class="row" style="margin-bottom:10px;" slot="customSearch">
                    <div class="col-sm-2 col-xs-3" v-show="selectStore.view">
                        <div class="input-group ">
                            <input type="hidden" class="form-control" v-model="searchArgs.storeId">
                            <input type="text" class="form-control" v-model="selectStore.name" placeholder="选择门店" readonly>
                            <span class="input-group-btn">
                                <button class="btn btn-flat btn-default" type="button" v-on:click="showStore"><i class="fa fa-search"></i></button>
                                <button class="btn btn-flat btn-default" type="button" v-on:click="clearStore"><i class="fa fa-eraser"></i></button>
                            </span>
                        </div>
                    </div>
                </div>
                <span class="input-group-btn" slot="customButtons">
                    <a class="btn btn-success btn-flat" href="/AccessToken/Create">新 增</a>
                    @*<button type="button" class="btn btn-success btn-flat" v-on:click="create()">新 增</button>*@
                    <button type="button" class="btn btn-warning btn-flat" v-on:click="edit()">修 改</button>
                    @*<button type="button" class="btn btn-primary btn-flat" v-on:click="print()">打 印</button>*@
                </span>
            </vue-table>
        </div>
        <!-- /.box-body -->
        <div class="box-footer">

        </div>
    </form>
    <!-- /.box-footer -->
    <v-modal v-bind:title="modalTitle" ok-text="保 存" cancel-text="取 消" v-bind:callback="onSubmit" v-bind:show.sync="modal" v-bind:effect="fade" width="800">
        <div slot="modal-body" class="modal-body">
            <div class="col-sm-2 col-xs-3" v-show="selectStore.view">
                <div class="input-group ">
                    <input type="hidden" class="form-control" v-model="searchArgs.storeId">
                    <input type="text" class="form-control" v-model="selectStore.name" placeholder="选择门店" readonly>
                    <span class="input-group-btn">
                        <button class="btn btn-flat btn-default" type="button" v-on:click="showStore"><i class="fa fa-search"></i></button>
                        <button class="btn btn-flat btn-default" type="button" v-on:click="clearStore"><i class="fa fa-eraser"></i></button>
                    </span>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-2 col-xs-3">
                    <v-input type="text" label="收银机：" v-bind:value.sync="model.text" placeholder="输入收银机编号" required icon></v-input>
                </div>
            </div>
        </div>
    </v-modal>
    <v-modal title="选择门店" ok-text="确 定" cancel-text="取 消" v-bind:callback="getStore" v-bind:show.sync="selectStore.modal" v-bind:effect="fade" width="60%">
        <div slot="modal-body" class="modal-body">
            <div style="min-height:350px;max-height:500px;overflow:auto;"><ul id="ztree" class="ztree"></ul></div>
        </div>
    </v-modal>
</div>
@{Html.RenderPartial("VueTableTemplate");}
@section scripts{
    <script src="~/Content/Vue/vuetable/vuetable.js"></script>
    <script src="~/Scripts/jquery.ztree.all-3.5.min.js"></script>
    <script>
        $("doucument").ready(function () {

            var vue = new Vue({
                components: {
                    'v-modal': VueStrap.modal,
                    'v-input': VueStrap.input,
                    'v-form': VueStrap.formGroup
                },
                el: '#app',
                data: {
                    modal: false,
                    gridColumns: [
                    { name: 'StoreName', localName: '门店' },
                    { name: 'PosId', localName: '收银机', },
                    { name: 'CDKey', localName: '服务端Key', width: '300' },
                    ],
                    url: "/AccessToken/LoadData",
                    searchArgs: { storeId: 0 },
                    rows: [],
                    modalTitle: "新增品类",
                    valid: false,
                    operate: 'add',
                    model: {
                        id: '',
                        posId: '',
                        storeId: '',
                        cdkey: '',
                    },
                    selectStore: {
                        modal: false,
                        name: '',
                        view: true,
                    }
                },
                methods: {
                    onSubmit: function () {
                        //获取选择节点
                        var v_data = this.model;
                        var v_url = "/Category/Create";
                        if (this.operate == "edit") {
                            v_url = "/Category/Edit";
                        }
                        var v_self = this;
                        $.post(v_url, v_data, function (result) {
                            if (result.success) {
                                v_self.modal = false;
                                if (v_self.operate == "add") {
                                    v_self.model.id = result.id;
                                }
                                v_self.refreshTree();
                            }
                            else {
                                bootbox.alert(result.error);
                            }
                        }, "json");
                    },
                    refreshTree: function () {
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var parentNode = treeObj.getSelectedNodes()[0];
                        if (this.operate == "add") {
                            var nodeName = "[" + this.model.id + "] " + this.model.text;
                            var newNode = { id: this.model.id, name: nodeName, pId: this.model.parentId, text: this.model.text };
                            if (parentNode) {    //有父节点
                                newNode.pId = parentNode.id;
                            }
                            newNode = treeObj.addNodes(parentNode, newNode);
                        }
                        else {
                            //编辑
                            parentNode.name = "[" + parentNode.id + "] " + this.model.text;
                            treeObj.updateNode(parentNode);
                        }

                    },
                    create: function () {
                        this.operate = "add";
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var selectNode = treeObj.getSelectedNodes()[0];
                        if (selectNode) {
                            this.model.parentId = selectNode.id;
                            this.model.parentName = selectNode.name;
                        }
                        this.modal = true;
                    },
                    edit: function () {

                        this.operate = "edit";
                        this.modalTitle = "修改品类"
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var selectNode = treeObj.getSelectedNodes()[0];
                        if (selectNode) {
                            var parentNode = selectNode.getParentNode();
                            if (parentNode) {
                                this.model.parentId = parentNode.id;
                                this.model.parentName = parentNode.name;
                            }
                            this.model.id = selectNode.id;
                            this.model.name = selectNode.name;
                            this.model.text = selectNode.text;
                            this.modal = true;
                        }
                        else {
                            bootbox.alert("请选择一个要修改的分类");
                        }
                    },
                    remove: function () {
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var selectNode = treeObj.getSelectedNodes()[0];
                        if (selectNode == null) {
                            bootbox.alert("请选择一个品类");
                            return;
                        }
                        bootbox.confirm("您确定删除该记录？", function (result) {
                            if (result) {
                                $.post("/Category/Remove", { id: selectNode.id }, function (result) {
                                    if (result.success) {
                                        //删除子节点
                                        treeObj.removeChildNodes(selectNode);
                                        treeObj.removeNode(selectNode);
                                    }
                                    else {
                                        bootbox.alert(result.error);
                                    }
                                }, "json");
                            }
                        });
                    },
                    cancelSelect: function () {
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var nodes = treeObj.getSelectedNodes();
                        if (nodes.length > 0) {
                            treeObj.cancelSelectedNode(nodes[0]);
                        }
                    },
                    showStore: function () {
                        this.selectStore.modal = true;
                    },
                    clearStore: function () {
                        this.searchArgs.storeId = 0;
                        this.selectStore.name = "";
                    },
                    getStore: function () {
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var selecteds = treeObj.getCheckedNodes(true);
                        if (selecteds) {
                            var idArray = new Array();
                            var nameArray = new Array();
                            selecteds.forEach(function (item) {
                                if (item.level == 1) {
                                    idArray.push(item.id);
                                    nameArray.push(item.name);
                                }
                            })
                            if (idArray.length > 0) {
                                this.searchArgs.storeId = idArray[0];
                                this.selectStore.name = nameArray[0];
                                this.selectStore.modal = false;
                            }
                            else {
                                bootbox.alert("请选择一个门店");
                            }
                        }
                    },
                },
                watch: {
                    'modal': function (val, oldVal) {
                        if (!val) {
                            this.model = {
                                id: '',
                                name: '',
                                parentId: '',
                                parentName: '',
                                text: '',
                            };
                        }
                    }
                }
            });
            //加载门店tree
            var zTreeObj;
            var setting = {
                check: {
                    enable: true
                },
                async: {
                    enable: true,
                    url: "/Store/LoadStore",
                    //autoParam: ["id", "name"]
                },
                callback: {
                    onClick: function (event, treeId, treeNode) {
                        //点击展开/折叠节点
                        var treeObj = $.fn.zTree.getZTreeObj("ztree");
                        var open = !treeNode.open;
                        treeObj.expandNode(treeNode, open, false, false);
                        // vue.searchArgs.categoryId =treeNode.id;
                    }
                }
            };
            zTreeObj = $.fn.zTree.init($("#ztree"), setting);

        });

    </script>
}











